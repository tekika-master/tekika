<li class="nav-item"><a href="<%= likes_user_path(@user) %>" class="nav-link <%= 'active' if current_page?(likes_user_path(@user)) %>">お気に入り  <span class="badge badge-secondary"><%= @count_likes %></span></a></li>

<li class="nav-item"><a href="<%= evaluates_user_path(@user) %>" class="nav-link <%= 'active' if current_page?(evaluates_user_path(@user)) %>">購入した商品  <span class="badge badge-secondary"><%= @count_evaluates %></span></a></li>


<%= search_form_for(@q, url:search_path) do |f| %>
    <p>
      <%= f.search_field :lecture_cont, placeholder:" ミクロ経済学", class:'navbar_search_field'%>
      <%= f.submit "検索", class:'navbar_search_search' %>
    </p>
<% end %>

<a class="text-center text-md-left pr-5 pb-5">© 2019 Tekika. All Rights Reserved</a>
<a rel="nofollow" target="_blank" id="footer-link-twitter" href="https://twitter.com/Tekika_keio">
  <i class="fab fa-twitter white-text"> </i>
</a>


<%= f.select :department_e, '学部', ['1','法学部', '2','経済学部', '3','商学部', '4','文学部', '5','理工学部', '6','SFC', '7','その他'] ,{include_blank: '選択してください' }  %>


<%= f.label :department, '学部', {class: 'search_tag'}  %>
<%= f.radio_button :department_eq, '', {:checked => true} %>指定なし
<%= f.radio_button :department_eq, 1 %>法
<%= f.radio_button :department_eq, 2 %>経済
<%= f.radio_button :department_eq, 3 %>商
<%= f.radio_button :department_eq, 4 %>文
<%= f.radio_button :department_eq, 5 %>理
<%= f.radio_button :department_eq, 6 %>SFC
<%= f.radio_button :department_eq, 7 %>その他



class ProductsController < ApplicationController
  before_action :require_user_logged_in

  def cancel
    @product = Product.find(params[:product_id])
		@product.chosen = false
			if @product.save
        @room = Room.find(params[:room_id])
        @room.destroy
      	flash[:success] = '取引をキャンセルしました。'
        redirect_to root_url
			end
  end

  def review
    @review.product_id = product.id
    @review = Review.find(params[:review_id])
    @review.save
  end

  def index
    @products = Product.search(params[:search])
    @products = Product.order(id: :desc).page(params[:page]).per(20)
  end

  # def myproducts
  #   @products = Product.order(id: :desc).page(params[:page]).per(15)
  # end



  def edit
     @product = Product.find(params[:id])
  end

  def update
    @product = Product.find(params[:id])
    if current_user == @product.user
      @product.update(product_params)
      flash[:success] = '商品を編集しました。'
      redirect_to root_url
    else current_user.admin?
      @product.update(product_params)
      flash[:success] = '商品を編集しました。'
      redirect_to root_url
    end
  end

  def new
    @product = Product.new
  end

  def create
    @product = current_user.products.build(product_params)
    if @product.save
      flash[:success] = '商品を出品しました。'
      redirect_to root_url
    else
      @products = current_user.feed_products.order(id: :desc).page(params[:page])
      flash.now[:danger] = '商品の出品に失敗しました。'
      render 'products/new'
    end
  end

  def destroy
    product = Product.find(params[:id])
    if current_user.admin?
      product.destroy
        flash[:success] = '商品を削除しました。'
      redirect_to root_url
    else
      if current_user == @product.user
        product.destroy
          flash[:success] = '商品を削除しました。'
        redirect_to root_url
      end
    end
  end

  def show
     @product = Product.find(params[:id])
     @user = @product.user
       if @user.id != current_user.id
        @currentUserEntry=Entry.where(user_id: current_user.id, product_id: @product.id )
        @userEntry=Entry.where(user_id: @user.id, product_id: @product.id )
          if @userEntry.blank?
            @isRoom = false
            @room = Room.new
            @entry = Entry.new
          elsif @currentUserEntry.blank?
            @isRoom = false
            @room = Room.new
            @entry = Entry.new
          elsif @product.reviews.present?
            @isRoom = false
          else
            @currentUserEntry.each do |cu|
              @userEntry.each do |u|
                @isRoom = true
                @roomId = cu.room_id
              end
            end
          end
        else
         @currentUserEntry=Entry.where(user_id: current_user.id, product_id: @product.id )
        end

  end

  def search
    @products = Product.search(params[:search])
  end

  def likes
    @product = Product.find(params[:id])
    @likes = @user.likes.page(params[:page])
  end


  private

  def product_params
    params.require(:product).permit(:image, :title, :price, :lecture, :university, :place, :writing)
  end

  def picture_size
      if picture.size > 5.megabytes
        errors.add(:picture, "should be less than 5MB")
      end
  end

end

<li class="nav-item"><a href="<%= problem_path(@user) %>" class="nav-link <%= 'active' if current_page?(problem_path(@user)) %>">過去問 <span class="badge badge-secondary"><%= @count_problems %></span></a></li>

<div class="col-md-8">
  <ul class="nav nav-tabs nav-justified mb-3">

  <li class="nav-item"><a href="<%= good_path(@user) %>" class="nav-link <%= 'active' if current_page?(good_path(@user)) %>">😊 (良い)<span class="badge badge-secondary"><%= @good %></span></a></li>
  <li class="nav-item"><a href="<%= normal_path(@user) %>" class="nav-link <%= 'active' if current_page?(normal_path(@user)) %>">🙂 (普通) <span class="badge badge-secondary"><%= @normal %></span></a></li>
  <li class="nav-item"><a href="<%= bad_path(@user) %>" class="nav-link <%= 'active' if current_page?(bad_path(@user)) %>">😨 (悪い) <span class="badge badge-secondary"><%= @bad %></span></a></li>
  </ul>
</div>

<% @entries.each do |entry| %>
  <%= link_to "チャットルーム", room_path(entry.room_id) %>
<% end %>
